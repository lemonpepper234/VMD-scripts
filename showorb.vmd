#This script is used to draw isosurface map of orbitals generated by Multiwfn
#Written by Tian Lu (sobereva@sina.com), 2018-Oct-17
#set folder_path ".\\test\\au8pt5ground\\"

proc showorb {} {
color change rgb tan 0.700000 0.560000 0.360000
material change mirror Opaque 0.15
material change outline Opaque 4.000000
material change outlinewidth Opaque 0.5
material change ambient Glossy 0.1
material change diffuse Glossy 0.600000
material change opacity Glossy 0.75
material change shininess Glossy 1.0
mol modcolor 0 top Element
mol modcolor 1 top ColorID 12
mol modcolor 2 top ColorID 22
display distance -7.0
display height 10
light 3 on
}

#the variable folder_path should be claimed in the proc
proc orb {folder_path iorb} {
#Set the isovalue for showing orbitals here. 0.02~0.06 is commonly used.
set isoval 0.01
#Set the material for showing orbitals here. Glossy and EdgyGlass are recommended.
set mater Glossy
light 3 on

color Display Background white
display depthcue off
display rendermode GLSL
axes location Off
if {[molinfo num]>0} {
set viewpoint [molinfo top get {center_matrix rotate_matrix scale_matrix}]
}
mol delete top
mol new ${folder_path}orb[format %06d $iorb].cub
mol modstyle 0 top CPK 0.800000 0.300000 22.000000 22.000000
mol addrep top
mol modstyle 1 top Isosurface $isoval 0 0 0 1 1
mol modcolor 1 top ColorID 1
mol modmaterial 1 top $mater
mol addrep top
mol modstyle 2 top Isosurface -$isoval 0 0 0 1 1
mol modcolor 2 top ColorID 0
mol modmaterial 2 top $mater
if [info exists viewpoint] {
molinfo top set {center_matrix rotate_matrix scale_matrix} $viewpoint
}

showorb

}

#the variable folder_path should be claimed in the proc
proc orbiso {isoval} {
mol modstyle 1 top Isosurface $isoval 0 0 0 1 1
mol modstyle 2 top Isosurface -$isoval 0 0 0 1 1
}

#the variable folder_path should be claimed in the proc
proc orbclean {folder_path} {
file delete {*}[glob ${folder_path}orb*.cub]
}

#the function to render the orbitals
proc orbrender {folder_path start_orb_index end_orb_index isoval scaling_factor} {
    for {set iorb $start_orb_index} {$iorb <= $end_orb_index} {incr iorb} {
        set renderer TachyonInternal
        display resize 2540 2540

        orb $folder_path $iorb
        orbiso $isoval
        scale by $scaling_factor

        set filename "orbital_${iorb}.bmp"

        render $renderer $filename

        mol delete top  
    }
}